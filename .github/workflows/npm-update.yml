name: Automated npm update

on:
  schedule:
    - cron: '0 0 1 * *' # ÂàÜ ÊôÇ Êó• Êúà ÊõúÊó•
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  npm-update:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.x
          cache: npm

      - name: Install dependencies
        run: npm ci
    
      - name: Check if there is outdated packages and set an environment variable
        id: outdated-check
        run: |
          if [ "$(npm outdated --json || echo '{}')" != "{}" ]; then
            echo "Outdated packages found."
            echo "outdated=true" >> $GITHUB_OUTPUT
          else
            echo "No outdated packages." && exit 0
          fi

      - uses: actions/github-script@v7
        if: steps.outdated-check.outputs.outdated == 'true'
        id: set-result
        with:
          script: |
            const options = { ignoreReturnCode: true }
            const { stdout } = await exec.getExecOutput('npm', ['outdated', '--json'], options)
            const json = JSON.parse(stdout)
            
            function row(row) {
              return `| ${row.join(' | ')} |\n`
            }

            function status(current, wanted) {
              return current == wanted ? '‚úÖ' : 'üë∑‚Äç‚ôÄÔ∏è'
            }

            const table = []
            const header = ['Package', 'Status', 'Current', 'Wanted', 'Latest', 'Depended by']

            for (const [key, value] of Object.entries(json)) {
              console.log(`${key}: ${value}`)
              if (Array.isArray(value)) {
                for (let i = 0; i < value.length; i++) {
                  const v = value[i]
                  table.push([key, status(v.current, v.wanted), v.current, v.wanted, v.latest, v.dependent])
                }
              } else {
                table.push([key, status(value.current, value.wanted), value.current, value.wanted, value.latest, value.dependent])
              }
            }

            return (
              row(header) +
              row(new Array(header.length).fill('---')) +
              table.map(r => row(r)).join('')
            )
          result-encoding: string
          debug: true

      - name: Update packages
        run: npm update

      - name: Check for changes
        id: git-check
        run: |
          git diff --exit-code || echo "changes=true" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        if: ${{ steps.git-check.outputs.changes == 'true' }}
        uses: peter-evans/create-pull-request@v7
        with:
          base: main
          add-paths: package-lock.json
          commit-message: Update npm dependencies
          title: '[bot] Update dependencies'
          body: ${{ steps.set-result.outputs.result }}
          branch: bot/automated-npm-update
          delete-branch: true
          reviewers: m1m0zzz
          labels: dependencies
          sign-commits: true
